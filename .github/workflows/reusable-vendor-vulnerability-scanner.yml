# %CopyrightBegin%
#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright Ericsson AB 2024-2025. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# %CopyrightEnd%

name: Vendor Vulnerability Scanning
run-name: "[${{ inputs.version }}] Vendor Vulnerability Scanning"
description: 'Vulnerability scanning'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Reference branch to checkout and analyse'
        required: true
        default: 'master'
        type: 'string'
      sarif:
        description: 'Upload sarif file'
        required: true
        default: false
        type: boolean
  workflow_call:
    inputs:
      version:
        description: 'Reference branch to checkout and analyse'
        required: true
        default: 'master'
        type: 'string'
      sarif:
        description: 'Upload sarif file'
        required: true
        default: false
        type: boolean

env:
  VERSION: ${{ inputs.version }}
  REPO: "kikofernandez/otp" # github.repository or "erlang/otp"

jobs:
  analysis-vendor-dependencies:
    name: "[${{ inputs.version }}] Vulnerability Scanning of Vendor Dependencies"
    # This job is always run on the build of a `master` base-image.
    # then it copies the branch to be analysed, and scans it.
    # the main reason is that maint-25, maint-26, etc do not have this file
    # committed into them. thus, a workflow_dispatch or workflow_call would
    # not work, and we would not be able to analyse vendor dependecies there.
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4.2.2
      - uses: erlef/setup-beam@5304e04ea2b355f03681464e683d92e3b2f18451 # racket:actions/checkout@v1
        with:
          otp-version: '27'
      - name: 'Analysis of ${{ inputs.version }} dependencies'
        run: |
          git clone -b ${{ env.VERSION }} https://github.com/${{ env.REPO }}.git ${{ env.VERSION }}
          mkdir -p /home/runner/work/otp/otp/${{ env.VERSION }}/.github/scripts/
          cp /home/runner/work/otp/otp/.github/scripts/otp-compliance.es \
             /home/runner/work/otp/otp/${{ env.VERSION }}/.github/scripts/otp-compliance.es
          cd /home/runner/work/otp/otp/${{ env.VERSION }} && \
             .github/scripts/otp-compliance.es sbom osv-scan --version ${{ inputs.version }}

      - name: "Get ${{ inputs.version }} sha"
        id: sha
        run: |
          echo "tag=$(cd /home/runner/work/otp/otp/${{ env.VERSION }} && git describe HEAD)" >> $GITHUB_OUTPUT
          echo "sha=$(cd /home/runner/work/otp/otp/${{ env.VERSION }} && git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: "Upload to code-scanning"
        if: ${{ !failure() && inputs.sarif }}
        uses: github/codeql-action/upload-sarif@ea9e4e37992a54ee68a9622e985e60c8e8f12d9f # ratchet:github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ env.VERSION }}/results.sarif
          ref: ${{ steps.sha.outputs.tag }}
          sha: ${{ steps.sha.outputs.sha }}
